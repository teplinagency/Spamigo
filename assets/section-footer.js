"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,_toPropertyKey(n.key),n)}}function _createClass(t,e,r){return e&&_defineProperties(t.prototype,e),r&&_defineProperties(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&_setPrototypeOf(t,e)}function _createSuper(r){var n=_isNativeReflectConstruct();return function(){var t,e=_getPrototypeOf(r);return _possibleConstructorReturn(this,n?(t=_getPrototypeOf(this).constructor,Reflect.construct(e,arguments,t)):e.apply(this,arguments))}}function _possibleConstructorReturn(t,e){if(e&&("object"===_typeof(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(t)}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _wrapNativeSuper(t){var r="function"==typeof Map?new Map:void 0;return(_wrapNativeSuper=function(t){if(null===t||!_isNativeFunction(t))return t;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==r){if(r.has(t))return r.get(t);r.set(t,e)}function e(){return _construct(t,arguments,_getPrototypeOf(this).constructor)}return e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(e,t)})(t)}function _construct(t,e,r){return(_construct=_isNativeReflectConstruct()?Reflect.construct.bind():function(t,e,r){var n=[null];n.push.apply(n,e);e=new(Function.bind.apply(t,n));return r&&_setPrototypeOf(e,r.prototype),e}).apply(null,arguments)}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}function _isNativeFunction(e){try{return-1!==Function.toString.call(e).indexOf("[native code]")}catch(t){return"function"==typeof e}}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t})(t,e)}function _getPrototypeOf(t){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _defineProperty(t,e,r){return(e=_toPropertyKey(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function _toPropertyKey(t){t=_toPrimitive(t,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(t,e){if("object"!==_typeof(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0===r)return("string"===e?String:Number)(t);r=r.call(t,e||"default");if("object"!==_typeof(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}!function n(o,i,u){function c(e,t){if(!i[e]){if(!o[e]){var r="function"==typeof require&&require;if(!t&&r)return r(e,!0);if(f)return f(e,!0);throw(t=new Error("Cannot find module '"+e+"'")).code="MODULE_NOT_FOUND",t}r=i[e]={exports:{}},o[e][0].call(r.exports,function(t){return c(o[e][1][t]||t)},r,r.exports,n,o,i,u)}return i[e].exports}for(var f="function"==typeof require&&require,t=0;t<u.length;t++)c(u[t]);return c}({1:[function(t,e,r){customElements.get("s-footer")||customElements.define("s-footer",function(){_inherits(r,_wrapNativeSuper(HTMLElement));var t=_createSuper(r);function r(){var e;return _classCallCheck(this,r),_defineProperty(_assertThisInitialized(e=t.call(this)),"resizeHandler",function(){var t;992<=window.innerWidth?e.details.forEach(function(t){return t.setAttribute("open","")}):(e.details.forEach(function(t){return t.removeAttribute("open")}),null!=(t=e.details[0])&&t.setAttribute("open",""))}),e}return _createClass(r,[{key:"connectedCallback",value:function(){this.details=Array.from(this.querySelectorAll(".js-footer__details")),this.resizeHandler(),window.addEventListener("resize",this.resizeHandler)}},{key:"disconnectedCallback",value:function(){window.removeEventListener("resize",this.resizeHandler)}}]),r}())},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvc2VjdGlvbi1mb290ZXIuanMiLCJzZWN0aW9uLWZvb3Rlci5qcyJdLCJuYW1lcyI6WyJyIiwiZSIsIm4iLCJ0IiwibyIsImkiLCJmIiwiYyIsInJlcXVpcmUiLCJ1IiwiYSIsIkVycm9yIiwiY29kZSIsInAiLCJleHBvcnRzIiwiY2FsbCIsImxlbmd0aCIsIjEiLCJtb2R1bGUiLCJjdXN0b21FbGVtZW50cyIsImdldCIsImRlZmluZSIsIl9pbmhlcml0cyIsIlNlY3Rpb0Zvb3RlciIsIl93cmFwTmF0aXZlU3VwZXIiLCJIVE1MRWxlbWVudCIsIl9zdXBlciIsIl9jcmVhdGVTdXBlciIsIl90aGlzIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl9kZWZpbmVQcm9wZXJ0eSIsIl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJfdGhpcyRkZXRhaWxzJCIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJkZXRhaWxzIiwiZm9yRWFjaCIsImVsIiwic2V0QXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwicmVzaXplSGFuZGxlciIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIl0sIm1hcHBpbmdzIjoic2pIQUFBLENBQUEsU0FBQUEsRUFBQUMsRUFBQUMsRUFBQUMsR0FBQSxTQUFBQyxFQUFBQyxFQUFBQyxHQUFBLEdBQUEsQ0FBQUosRUFBQUcsR0FBQSxDQUFBLEdBQUEsQ0FBQUosRUFBQUksR0FBQSxDQUFBLElBQUFFLEVBQUEsWUFBQSxPQUFBQyxTQUFBQSxRQUFBLEdBQUEsQ0FBQUYsR0FBQUMsRUFBQSxPQUFBQSxFQUFBRixFQUFBLENBQUEsQ0FBQSxFQUFBLEdBQUFJLEVBQUEsT0FBQUEsRUFBQUosRUFBQSxDQUFBLENBQUEsRUFBQSxNQUFBSyxFQUFBLElBQUFDLE1BQUEsdUJBQUFOLEVBQUEsR0FBQSxHQUFBTyxLQUFBLG1CQUFBRixDQUFBLENBQUFHLEVBQUFYLEVBQUFHLEdBQUEsQ0FBQVMsUUFBQSxFQUFBLEVBQUFiLEVBQUFJLEdBQUEsR0FBQVUsS0FBQUYsRUFBQUMsUUFBQSxTQUFBZCxHQUFBLE9BQUFJLEVBQUFILEVBQUFJLEdBQUEsR0FBQUwsSUFBQUEsQ0FBQSxDQUFBLEVBQUFhLEVBQUFBLEVBQUFDLFFBQUFkLEVBQUFDLEVBQUFDLEVBQUFDLENBQUEsQ0FBQSxDQUFBLE9BQUFELEVBQUFHLEdBQUFTLE9BQUEsQ0FBQSxJQUFBLElBQUFMLEVBQUEsWUFBQSxPQUFBRCxTQUFBQSxRQUFBSCxFQUFBLEVBQUFBLEVBQUFGLEVBQUFhLE9BQUFYLENBQUEsR0FBQUQsRUFBQUQsRUFBQUUsRUFBQSxFQUFBLE9BQUFELENBQUEsRUFBQSxDQUFBYSxFQUFBLENBQUEsU0FBQVQsRUFBQVUsRUFBQUosR0NBQUssZUFBQUMsSUFBQSxVQUFBLEdBQ0FELGVBQUFFLE9BQ0EsV0FBQSxXQUFBQyxVQUFBQyxFQWdCQUMsaUJBZkFDLFdBQUEsQ0FEQSxFQUFBLElBQUFDLEVBQUFDLGFBQUFKLENBQUEsRUFFQSxTQUFBQSxJQUFBLElBQUFLLEVBdUJBLE9BdkJBQyxnQkFBQUMsS0FBQVAsQ0FBQSxFQUNBUSxnQkFBQUMsdUJBQUFKLEVBQUFGLEVBQUFYLEtBQUFlLElBQUEsQ0FBQSxFQUFBLGdCQWVBLFdBQ0EsSUFFQUcsRUFGQSxLQUFBQyxPQUFBQyxXQUNBUCxFQUFBUSxRQUFBQyxRQUFBLFNBQUFDLEdBQUEsT0FBQUEsRUFBQUMsYUFBQSxPQUFBLEVBQUEsQ0FBQSxDQUFBLEdBRUFYLEVBQUFRLFFBQUFDLFFBQUEsU0FBQUMsR0FBQSxPQUFBQSxFQUFBRSxnQkFBQSxNQUFBLENBQUEsQ0FBQSxFQUNBLE9BQUFQLEVBQUFMLEVBQUFRLFFBQUEsS0FBQUgsRUFBQU0sYUFBQSxPQUFBLEVBQUEsRUFFQSxDQUFBLEVBQUFYLENBcEJBLENBV0EsT0FYQWEsYUFBQWxCLEVBQUEsQ0FBQSxDQUFBbUIsSUFBQSxvQkFBQUMsTUFFQSxXQUNBYixLQUFBTSxRQUFBUSxNQUFBQyxLQUFBZixLQUFBZ0IsaUJBQUEscUJBQUEsQ0FBQSxFQUVBaEIsS0FBQWlCLGNBQUEsRUFDQWIsT0FBQWMsaUJBQUEsU0FBQWxCLEtBQUFpQixhQUFBLENBQ0EsQ0FBQSxFQUFBLENBQUFMLElBQUEsdUJBQUFDLE1BRUEsV0FDQVQsT0FBQWUsb0JBQUEsU0FBQW5CLEtBQUFpQixhQUFBLENBQ0EsQ0FBQSxFQUFBLEVBQUF4QixDQUFBLEVBZkEsQ0EwQkEsQ0NJQSxFQUFFLEdBQUcsRUFBRSxHRmpDUGxCLENBQUEsRUFBQSIsImZpbGUiOiJzZWN0aW9uLWZvb3Rlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJpZiAoIWN1c3RvbUVsZW1lbnRzLmdldChcInMtZm9vdGVyXCIpKSB7XHJcbiAgY3VzdG9tRWxlbWVudHMuZGVmaW5lKFxyXG4gICAgXCJzLWZvb3RlclwiLFxyXG4gICAgY2xhc3MgU2VjdGlvRm9vdGVyIGV4dGVuZHMgSFRNTEVsZW1lbnQge1xyXG4gICAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG5cclxuICAgICAgfVxyXG5cclxuICAgICAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XHJcbiAgICAgICAgdGhpcy5kZXRhaWxzID0gQXJyYXkuZnJvbSh0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuanMtZm9vdGVyX19kZXRhaWxzXCIpKTtcclxuXHJcbiAgICAgICAgdGhpcy5yZXNpemVIYW5kbGVyKCk7XHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgdGhpcy5yZXNpemVIYW5kbGVyKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XHJcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgdGhpcy5yZXNpemVIYW5kbGVyKVxyXG4gICAgICB9XHJcblxyXG4gICAgICByZXNpemVIYW5kbGVyID0gKCkgPT4ge1xyXG4gICAgICAgIGlmKHdpbmRvdy5pbm5lcldpZHRoID49IDk5Mikge1xyXG4gICAgICAgICAgdGhpcy5kZXRhaWxzLmZvckVhY2goZWwgPT4gZWwuc2V0QXR0cmlidXRlKFwib3BlblwiLCBcIlwiKSlcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhpcy5kZXRhaWxzLmZvckVhY2goZWwgPT4gZWwucmVtb3ZlQXR0cmlidXRlKFwib3BlblwiKSlcclxuICAgICAgICAgIHRoaXMuZGV0YWlsc1swXT8uc2V0QXR0cmlidXRlKFwib3BlblwiLCBcIlwiKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICB9XHJcbiAgKTtcclxufVxyXG4iLCIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpKHsxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbmlmICghY3VzdG9tRWxlbWVudHMuZ2V0KFwicy1mb290ZXJcIikpIHtcclxuICBjdXN0b21FbGVtZW50cy5kZWZpbmUoXHJcbiAgICBcInMtZm9vdGVyXCIsXHJcbiAgICBjbGFzcyBTZWN0aW9Gb290ZXIgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XHJcbiAgICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcblxyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcclxuICAgICAgICB0aGlzLmRldGFpbHMgPSBBcnJheS5mcm9tKHRoaXMucXVlcnlTZWxlY3RvckFsbChcIi5qcy1mb290ZXJfX2RldGFpbHNcIikpO1xyXG5cclxuICAgICAgICB0aGlzLnJlc2l6ZUhhbmRsZXIoKTtcclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCB0aGlzLnJlc2l6ZUhhbmRsZXIpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcclxuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCB0aGlzLnJlc2l6ZUhhbmRsZXIpXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJlc2l6ZUhhbmRsZXIgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYod2luZG93LmlubmVyV2lkdGggPj0gOTkyKSB7XHJcbiAgICAgICAgICB0aGlzLmRldGFpbHMuZm9yRWFjaChlbCA9PiBlbC5zZXRBdHRyaWJ1dGUoXCJvcGVuXCIsIFwiXCIpKVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0aGlzLmRldGFpbHMuZm9yRWFjaChlbCA9PiBlbC5yZW1vdmVBdHRyaWJ1dGUoXCJvcGVuXCIpKVxyXG4gICAgICAgICAgdGhpcy5kZXRhaWxzWzBdPy5zZXRBdHRyaWJ1dGUoXCJvcGVuXCIsIFwiXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgIH1cclxuICApO1xyXG59XHJcblxufSx7fV19LHt9LFsxXSlcblxuIl19
